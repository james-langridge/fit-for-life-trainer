// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY IT.

import {Asset, Entry} from 'contentful'
import {Document} from '@contentful/rich-text-types'

export interface IContactFields {
  /** Headline */
  headline: string

  /** Subheading */
  subheading?: string | undefined

  /** Address */
  address?: string | undefined

  /** Phone */
  phone?: string | undefined

  /** Email */
  email?: string | undefined

  /** Facebook */
  facebook?: string | undefined

  /** Image */
  image?: Asset | undefined
}

export interface IContact extends Entry<IContactFields> {
  sys: {
    id: string
    type: string
    createdAt: string
    updatedAt: string
    locale: string
    contentType: {
      sys: {
        id: 'contact'
        linkType: 'ContentType'
        type: 'Link'
      }
    }
  }
}

export interface ICtaFormFields {
  /** Main text */
  mainText: string

  /** Sub text */
  subText?: string | undefined

  /** Button text */
  buttonText: string
}

export interface ICtaForm extends Entry<ICtaFormFields> {
  sys: {
    id: string
    type: string
    createdAt: string
    updatedAt: string
    locale: string
    contentType: {
      sys: {
        id: 'ctaForm'
        linkType: 'ContentType'
        type: 'Link'
      }
    }
  }
}

export interface ICtaSimpleFields {
  /** Main text */
  mainText: string

  /** Sub text */
  subText?: Document | undefined

  /** Button text */
  buttonText: string

  /** Button link */
  buttonLink: string
}

export interface ICtaSimple extends Entry<ICtaSimpleFields> {
  sys: {
    id: string
    type: string
    createdAt: string
    updatedAt: string
    locale: string
    contentType: {
      sys: {
        id: 'ctaSimple'
        linkType: 'ContentType'
        type: 'Link'
      }
    }
  }
}

export interface IFooterFields {
  /** Name */
  name?: string | undefined

  /** Left text */
  leftText?: string | undefined

  /** With blog posts? */
  withBlogPosts?: boolean | undefined

  /** Number of blog post links */
  numberOfBlogPostLinks?: number | undefined

  /** Footer link sections */
  footerLinkSections?: IFooterLinkSection[] | undefined

  /** Contact section heading */
  contactSectionHeading?: string | undefined

  /** Contact phone */
  contactPhone?: string | undefined

  /** Contact email */
  contactEmail?: string | undefined
}

/** The footer that will appear at the bottom of each page. */

export interface IFooter extends Entry<IFooterFields> {
  sys: {
    id: string
    type: string
    createdAt: string
    updatedAt: string
    locale: string
    contentType: {
      sys: {
        id: 'footer'
        linkType: 'ContentType'
        type: 'Link'
      }
    }
  }
}

export interface IFooterLinkFields {
  /** Label */
  label: string

  /** Href */
  href: string
}

export interface IFooterLink extends Entry<IFooterLinkFields> {
  sys: {
    id: string
    type: string
    createdAt: string
    updatedAt: string
    locale: string
    contentType: {
      sys: {
        id: 'footerLink'
        linkType: 'ContentType'
        type: 'Link'
      }
    }
  }
}

export interface IFooterLinkSectionFields {
  /** Heading */
  heading: string

  /** Links */
  links: IFooterLink[]
}

/** A section of links in the footer. */

export interface IFooterLinkSection extends Entry<IFooterLinkSectionFields> {
  sys: {
    id: string
    type: string
    createdAt: string
    updatedAt: string
    locale: string
    contentType: {
      sys: {
        id: 'footerLinkSection'
        linkType: 'ContentType'
        type: 'Link'
      }
    }
  }
}

export interface IHeroImageHeadingFields {
  /** Heading */
  heading: string

  /** Sub-heading */
  subHeading?: string | undefined

  /** Image */
  image: Asset

  /** Program benefits */
  programBenefits?: string[] | undefined
}

export interface IHeroImageHeading extends Entry<IHeroImageHeadingFields> {
  sys: {
    id: string
    type: string
    createdAt: string
    updatedAt: string
    locale: string
    contentType: {
      sys: {
        id: 'heroImageHeading'
        linkType: 'ContentType'
        type: 'Link'
      }
    }
  }
}

export interface IHeroSideImageFields {
  /** Headline */
  headline: string

  /** Subheading */
  subheading?: string | undefined

  /** Left button CTA */
  leftButtonCta?: string | undefined

  /** Left button link */
  leftButtonLink?: string | undefined

  /** Right button CTA */
  rightButtonCta?: string | undefined

  /** Right button link */
  rightButtonLink?: string | undefined

  /** Image */
  image: Asset
}

export interface IHeroSideImage extends Entry<IHeroSideImageFields> {
  sys: {
    id: string
    type: string
    createdAt: string
    updatedAt: string
    locale: string
    contentType: {
      sys: {
        id: 'heroSideImage'
        linkType: 'ContentType'
        type: 'Link'
      }
    }
  }
}

export interface IImageFields {
  /** Name */
  name?: string | undefined

  /** Image */
  image: Asset
}

export interface IImage extends Entry<IImageFields> {
  sys: {
    id: string
    type: string
    createdAt: string
    updatedAt: string
    locale: string
    contentType: {
      sys: {
        id: 'image'
        linkType: 'ContentType'
        type: 'Link'
      }
    }
  }
}

export interface INavbarFields {
  /** Navbar name */
  navbarName: string

  /** Logo */
  logo: Asset

  /** Navbar items */
  navbarItems?: INavbarItem[] | undefined
}

/** This is the navbar that is automatically displayed on the website.  You don't need to add it to any page. */

export interface INavbar extends Entry<INavbarFields> {
  sys: {
    id: string
    type: string
    createdAt: string
    updatedAt: string
    locale: string
    contentType: {
      sys: {
        id: 'navbar'
        linkType: 'ContentType'
        type: 'Link'
      }
    }
  }
}

export interface INavbarItemFields {
  /** Label */
  label: string

  /** Link */
  link: string
}

/** This is a navbar item that can be added to the navbar.  It just needs a label and a link. */

export interface INavbarItem extends Entry<INavbarItemFields> {
  sys: {
    id: string
    type: string
    createdAt: string
    updatedAt: string
    locale: string
    contentType: {
      sys: {
        id: 'navbarItem'
        linkType: 'ContentType'
        type: 'Link'
      }
    }
  }
}

export interface IPageFields {
  /** Page name */
  pageName: string

  /** Slug */
  slug: string

  /** Blog post? */
  isBlogPost?: boolean | undefined

  /** Page content */
  pageContent?: Entry<{[fieldId: string]: unknown}>[] | undefined
}

/** This will create a new empty page accessible at the slug you choose.  Eg: www.fitforlifetrainer.co.uk/slug.  You can add new or existing content entries to this page. */

export interface IPage extends Entry<IPageFields> {
  sys: {
    id: string
    type: string
    createdAt: string
    updatedAt: string
    locale: string
    contentType: {
      sys: {
        id: 'page'
        linkType: 'ContentType'
        type: 'Link'
      }
    }
  }
}

export interface IProgramAdFields {
  /** Name */
  name: string

  /** Image */
  image: Asset

  /** Content */
  content: Document

  /** CTA text */
  ctaText: string
}

export interface IProgramAd extends Entry<IProgramAdFields> {
  sys: {
    id: string
    type: string
    createdAt: string
    updatedAt: string
    locale: string
    contentType: {
      sys: {
        id: 'programAd'
        linkType: 'ContentType'
        type: 'Link'
      }
    }
  }
}

export interface IProgramAdBannerFields {
  /** Heading */
  heading: string

  /** Programs */
  programs: IProgramAd[]
}

export interface IProgramAdBanner extends Entry<IProgramAdBannerFields> {
  sys: {
    id: string
    type: string
    createdAt: string
    updatedAt: string
    locale: string
    contentType: {
      sys: {
        id: 'programAdBanner'
        linkType: 'ContentType'
        type: 'Link'
      }
    }
  }
}

export interface IRichTextFields {
  /** Name */
  name?: string | undefined

  /** Rich Text */
  richText: Document

  /** Background colour */
  backgroundColour?: Record<string, any> | undefined
}

/** A stand-alone block of rich text. */

export interface IRichText extends Entry<IRichTextFields> {
  sys: {
    id: string
    type: string
    createdAt: string
    updatedAt: string
    locale: string
    contentType: {
      sys: {
        id: 'richText'
        linkType: 'ContentType'
        type: 'Link'
      }
    }
  }
}

export interface ITestimonialFields {
  /** Name */
  name: string

  /** Testimonial text */
  testimonialText: Document

  /** Client description */
  clientDescription?: string | undefined

  /** Photo */
  photo?: Asset | undefined
}

/** Client testimonial. */

export interface ITestimonial extends Entry<ITestimonialFields> {
  sys: {
    id: string
    type: string
    createdAt: string
    updatedAt: string
    locale: string
    contentType: {
      sys: {
        id: 'testimonial'
        linkType: 'ContentType'
        type: 'Link'
      }
    }
  }
}

export interface IVideoHeroFeatureFields {
  /** Name */
  name?: string | undefined

  /** Tagline 1st line */
  tagline1stLine?: string | undefined

  /** Tagline 2nd line */
  tagline2ndLine?: string | undefined

  /** Video url */
  videoUrl: string

  /** Program cards */
  programCards?: IVideoHeroProgramCard[] | undefined
}

export interface IVideoHeroFeature extends Entry<IVideoHeroFeatureFields> {
  sys: {
    id: string
    type: string
    createdAt: string
    updatedAt: string
    locale: string
    contentType: {
      sys: {
        id: 'videoHeroFeature'
        linkType: 'ContentType'
        type: 'Link'
      }
    }
  }
}

export interface IVideoHeroProgramCardFields {
  /** Name */
  name: string

  /** Program summary */
  programSummary: Document

  /** Slug */
  slug: string
}

export interface IVideoHeroProgramCard
  extends Entry<IVideoHeroProgramCardFields> {
  sys: {
    id: string
    type: string
    createdAt: string
    updatedAt: string
    locale: string
    contentType: {
      sys: {
        id: 'videoHeroProgramCard'
        linkType: 'ContentType'
        type: 'Link'
      }
    }
  }
}

export type CONTENT_TYPE =
  | 'contact'
  | 'ctaForm'
  | 'ctaSimple'
  | 'footer'
  | 'footerLink'
  | 'footerLinkSection'
  | 'heroImageHeading'
  | 'heroSideImage'
  | 'image'
  | 'navbar'
  | 'navbarItem'
  | 'page'
  | 'programAd'
  | 'programAdBanner'
  | 'richText'
  | 'testimonial'
  | 'videoHeroFeature'
  | 'videoHeroProgramCard'

export type IEntry =
  | IContact
  | ICtaForm
  | ICtaSimple
  | IFooter
  | IFooterLink
  | IFooterLinkSection
  | IHeroImageHeading
  | IHeroSideImage
  | IImage
  | INavbar
  | INavbarItem
  | IPage
  | IProgramAd
  | IProgramAdBanner
  | IRichText
  | ITestimonial
  | IVideoHeroFeature
  | IVideoHeroProgramCard

export type LOCALE_CODE = 'de-DE' | 'en-US'

export type CONTENTFUL_DEFAULT_LOCALE_CODE = 'en-US'
